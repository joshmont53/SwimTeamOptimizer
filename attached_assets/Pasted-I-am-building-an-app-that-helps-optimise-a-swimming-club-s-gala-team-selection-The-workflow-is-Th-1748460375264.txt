I am building an app that helps optimise a swimming club's gala team selection. The workflow is:

The user uploads a CSV file in a specified format containing swimmer data.

The user selects from that list which swimmers are available for selection.

The user sees a list of all swimming events (e.g. “11U 50m Freestyle Male”). The user can preselect a swimmer from a dropdown list for any given event. The list of swimmers in the dropdown is filtered based on gender, age eligibility, and availability.

The user then runs the optimiser, which uses a Python script to select the best swimmer for each event.

The issue:
In step 3 above, the event list is incomplete. Currently, only events in the 11U and 16U categories (both male and female) are shown. Events for 13U and 15U (both individual and relay events) are missing from the list. This is a bug.

This has been investigated many times with Replit AI, with repeated attempts at logging and debugging. Despite this, the issue persists, and I have now used all my credits. Therefore, I need the next attempt to be comprehensive and successful.

Important constraints:

All events listed in the event list should appear in step 3, including 13U and 15U categories (individual and relays).

The dropdown for each event must only include swimmers who meet the criteria (gender, age, and availability).

Do not break or reverse any recently fixed bugs. Specifically:

Unavailable swimmers must continue to be excluded from the selection dropdown.

Preselected swimmers for events must still be respected and not overwritten or ignored.

I want you to do the following:

Research deeply across my codebase.

Find what files and functions are related to the problems and goals I outlined above.

Assess reasons for why the event list is incomplete and explain what may be causing this.

Consider if any logic or filtering is accidentally excluding 13U and 15U events.

Check whether the CSV parser, event builder, or frontend filtering logic is faulty or incomplete.

Develop a clear, step-by-step plan to fix the problem, taking care not to undo other recent fixes.

Write this entire plan and report into a file called “Instructions.md” in my project.